[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/Day2- Math Anxiety/index.html",
    "href": "posts/Day2- Math Anxiety/index.html",
    "title": "Day2: Math Anxiety",
    "section": "",
    "text": "Introooooooooooooooo"
  },
  {
    "objectID": "posts/Day2- Math Anxiety/index.html#intro",
    "href": "posts/Day2- Math Anxiety/index.html#intro",
    "title": "Day2: Math Anxiety",
    "section": "",
    "text": "Introooooooooooooooo"
  },
  {
    "objectID": "posts/Day2- Math Anxiety/index.html#installing-libraries",
    "href": "posts/Day2- Math Anxiety/index.html#installing-libraries",
    "title": "Day2: Math Anxiety",
    "section": "Installing Libraries",
    "text": "Installing Libraries\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(skimr)\nlibrary(knitr)\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:skimr':\n\n    n_missing\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows"
  },
  {
    "objectID": "posts/Day2- Math Anxiety/index.html#analysing-math-anxiety-data",
    "href": "posts/Day2- Math Anxiety/index.html#analysing-math-anxiety-data",
    "title": "Day2: Math Anxiety",
    "section": "Analysing Math Anxiety Data",
    "text": "Analysing Math Anxiety Data\n\nAccessing Math Anxiety Dataset from PC\n\nmath_anxiety &lt;- read_delim(file = \"../../data/MathAnxiety.csv\", delim = \";\")\n\nRows: 599 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (2): Gender, Grade\ndbl (3): AMAS, RCMAS, Arith\nnum (1): Age\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmath_anxiety\n\n# A tibble: 599 × 6\n     Age Gender Grade      AMAS RCMAS Arith\n   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  1378 Boy    Secondary     9    20     6\n 2  1407 Boy    Secondary    18     8     6\n 3  1379 Girl   Secondary    23    26     5\n 4  1428 Girl   Secondary    19    18     7\n 5  1356 Boy    Secondary    23    20     1\n 6  1350 Girl   Secondary    27    33     1\n 7  1336 Boy    Secondary    22    23     4\n 8  1393 Boy    Secondary    17    11     7\n 9  1317 Girl   Secondary    28    32     2\n10  1348 Boy    Secondary    20    30     6\n# ℹ 589 more rows\n\n\n\n\nAverage of Grades Both Genders in Primary and Secondary\n\nmath_anxiety %&gt;% \n  group_by(Gender, Grade) %&gt;%\n  summarize(average_Arith = mean(Arith), average_AMAS = mean(AMAS), average_RCMAS = mean(RCMAS))\n\n`summarise()` has grouped output by 'Gender'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 4 × 5\n# Groups:   Gender [2]\n  Gender Grade     average_Arith average_AMAS average_RCMAS\n  &lt;chr&gt;  &lt;chr&gt;             &lt;dbl&gt;        &lt;dbl&gt;         &lt;dbl&gt;\n1 Boy    Primary            5.87         20.9          18.6\n2 Boy    Secondary          4.31         21.5          17.4\n3 Girl   Primary            5.74         22.7          20.6\n4 Girl   Secondary          4.24         23.5          20.3"
  },
  {
    "objectID": "posts/Day2/index.html",
    "href": "posts/Day2/index.html",
    "title": "Day2: Examining, Modifying and Grouping Datasets",
    "section": "",
    "text": "Making a new post."
  },
  {
    "objectID": "posts/Day2/index.html#intro",
    "href": "posts/Day2/index.html#intro",
    "title": "Day2: Examining, Modifying and Grouping Datasets",
    "section": "",
    "text": "Making a new post."
  },
  {
    "objectID": "posts/Day2/index.html#installing-libraries",
    "href": "posts/Day2/index.html#installing-libraries",
    "title": "Day2: Examining, Modifying and Grouping Datasets",
    "section": "Installing Libraries",
    "text": "Installing Libraries\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(skimr)\nlibrary(knitr)\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:skimr':\n\n    n_missing\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows"
  },
  {
    "objectID": "posts/Day2/index.html#look-at-the-mpg-dataset",
    "href": "posts/Day2/index.html#look-at-the-mpg-dataset",
    "title": "Day2: Examining, Modifying and Grouping Datasets",
    "section": "Look at the mpg dataset",
    "text": "Look at the mpg dataset\n\nmpg %&gt;%\n  head(10)\n\n# A tibble: 10 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   &lt;chr&gt;        &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…"
  },
  {
    "objectID": "posts/Day2/index.html#ways-to-examine-the-mpg-dataset",
    "href": "posts/Day2/index.html#ways-to-examine-the-mpg-dataset",
    "title": "Day2: Examining, Modifying and Grouping Datasets",
    "section": "Ways to examine the mpg dataset",
    "text": "Ways to examine the mpg dataset\n\nGlimpse\n\nglimpse(mpg)\n\nRows: 234\nColumns: 11\n$ manufacturer &lt;chr&gt; \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        &lt;chr&gt; \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        &lt;dbl&gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         &lt;int&gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          &lt;int&gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        &lt;chr&gt; \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n$ drv          &lt;chr&gt; \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n$ cty          &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          &lt;int&gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           &lt;chr&gt; \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n$ class        &lt;chr&gt; \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\n\n\n\n\nInspect\n\nmpg %&gt;% mosaic::inspect()\n\n\ncategorical variables:  \n          name     class levels   n missing\n1 manufacturer character     15 234       0\n2        model character     38 234       0\n3        trans character     10 234       0\n4          drv character      3 234       0\n5           fl character      5 234       0\n6        class character      7 234       0\n                                   distribution\n1 dodge (15.8%), toyota (14.5%) ...            \n2 caravan 2wd (4.7%) ...                       \n3 auto(l4) (35.5%), manual(m5) (24.8%) ...     \n4 f (45.3%), 4 (44%), r (10.7%)                \n5 r (71.8%), p (22.2%), e (3.4%) ...           \n6 suv (26.5%), compact (20.1%) ...             \n\nquantitative variables:  \n   name   class    min     Q1 median     Q3  max        mean       sd   n\n1 displ numeric    1.6    2.4    3.3    4.6    7    3.471795 1.291959 234\n2  year integer 1999.0 1999.0 2003.5 2008.0 2008 2003.500000 4.509646 234\n3   cyl integer    4.0    4.0    6.0    8.0    8    5.888889 1.611534 234\n4   cty integer    9.0   14.0   17.0   19.0   35   16.858974 4.255946 234\n5   hwy integer   12.0   18.0   24.0   27.0   44   23.440171 5.954643 234\n  missing\n1       0\n2       0\n3       0\n4       0\n5       0\n\n\n\n\nSkim\n\nmpg %&gt;% skimr::skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n0\n1\n4\n10\n0\n15\n0\n\n\nmodel\n0\n1\n2\n22\n0\n38\n0\n\n\ntrans\n0\n1\n8\n10\n0\n10\n0\n\n\ndrv\n0\n1\n1\n1\n0\n3\n0\n\n\nfl\n0\n1\n1\n1\n0\n5\n0\n\n\nclass\n0\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n0\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n▇▆▆▃▁\n\n\nyear\n0\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n▇▁▁▁▇\n\n\ncyl\n0\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n▇▁▇▁▇\n\n\ncty\n0\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n▆▇▃▁▁\n\n\nhwy\n0\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n▅▅▇▁▁"
  },
  {
    "objectID": "posts/Day2/index.html#mutating-mpgs-variables-to-factors-and-saving-them-as-mpg_modified",
    "href": "posts/Day2/index.html#mutating-mpgs-variables-to-factors-and-saving-them-as-mpg_modified",
    "title": "Day2: Examining, Modifying and Grouping Datasets",
    "section": "Mutating mpg’s variables to factors and saving them as mpg_modified",
    "text": "Mutating mpg’s variables to factors and saving them as mpg_modified\n\nmpg_modified &lt;- mpg %&gt;%\n  dplyr::mutate(\n    cyl = as_factor(cyl),\n    fl = as_factor(fl),\n    drv = as_factor(drv),\n    class = as_factor(class),\n    trans = as_factor(trans)\n  )\nglimpse(mpg_modified)\n\nRows: 234\nColumns: 11\n$ manufacturer &lt;chr&gt; \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        &lt;chr&gt; \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        &lt;dbl&gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         &lt;int&gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          &lt;fct&gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        &lt;fct&gt; auto(l5), manual(m5), manual(m6), auto(av), auto(l5), man…\n$ drv          &lt;fct&gt; f, f, f, f, f, f, f, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, r, …\n$ cty          &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          &lt;int&gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           &lt;fct&gt; p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, r, …\n$ class        &lt;fct&gt; compact, compact, compact, compact, compact, compact, com…"
  },
  {
    "objectID": "posts/Day2/index.html#examining-and-modifying-babynames-dataset",
    "href": "posts/Day2/index.html#examining-and-modifying-babynames-dataset",
    "title": "Day2: Examining, Modifying and Grouping Datasets",
    "section": "Examining and Modifying babynames dataset",
    "text": "Examining and Modifying babynames dataset\n\nImport babynames dataset\n\nlibrary(babynames)\n\n\n\nbabynames dataset\n\nbabynames\n\n# A tibble: 1,924,665 × 5\n    year sex   name          n   prop\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;     &lt;int&gt;  &lt;dbl&gt;\n 1  1880 F     Mary       7065 0.0724\n 2  1880 F     Anna       2604 0.0267\n 3  1880 F     Emma       2003 0.0205\n 4  1880 F     Elizabeth  1939 0.0199\n 5  1880 F     Minnie     1746 0.0179\n 6  1880 F     Margaret   1578 0.0162\n 7  1880 F     Ida        1472 0.0151\n 8  1880 F     Alice      1414 0.0145\n 9  1880 F     Bertha     1320 0.0135\n10  1880 F     Sarah      1288 0.0132\n# ℹ 1,924,655 more rows\n\n\n\n\nGlimpse\n\nglimpse(babynames)\n\nRows: 1,924,665\nColumns: 5\n$ year &lt;dbl&gt; 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880,…\n$ sex  &lt;chr&gt; \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", …\n$ name &lt;chr&gt; \"Mary\", \"Anna\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\",…\n$ n    &lt;int&gt; 7065, 2604, 2003, 1939, 1746, 1578, 1472, 1414, 1320, 1288, 1258,…\n$ prop &lt;dbl&gt; 0.07238359, 0.02667896, 0.02052149, 0.01986579, 0.01788843, 0.016…\n\n\n\n\nInspect\n\nmosaic::inspect(babynames)\n\n\ncategorical variables:  \n  name     class levels       n missing\n1  sex character      2 1924665       0\n2 name character  97310 1924665       0\n                                   distribution\n1 F (59.1%), M (40.9%)                         \n2 Francis (0%), James (0%) ...                 \n\nquantitative variables:  \n  name   class      min        Q1    median        Q3          max         mean\n1 year numeric 1.88e+03 1.951e+03 1.985e+03 2.003e+03 2.017000e+03 1.974851e+03\n2    n integer 5.00e+00 7.000e+00 1.200e+01 3.200e+01 9.968600e+04 1.808733e+02\n3 prop numeric 2.26e-06 3.870e-06 7.300e-06 2.288e-05 8.154561e-02 1.362963e-04\n            sd       n missing\n1 3.402948e+01 1924665       0\n2 1.533337e+03 1924665       0\n3 1.151693e-03 1924665       0\n\n\n\n\nSkim\n\nskimr::skim(babynames)\n\n\nData summary\n\n\nName\nbabynames\n\n\nNumber of rows\n1924665\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nsex\n0\n1\n1\n1\n0\n2\n0\n\n\nname\n0\n1\n2\n15\n0\n97310\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n0\n1\n1974.85\n34.03\n1880\n1951\n1985\n2003\n2017.00\n▁▂▃▅▇\n\n\nn\n0\n1\n180.87\n1533.34\n5\n7\n12\n32\n99686.00\n▇▁▁▁▁\n\n\nprop\n0\n1\n0.00\n0.00\n0\n0\n0\n0\n0.08\n▇▁▁▁▁\n\n\n\n\n\n\n\nMutate babynames\n\nbabynames_modified &lt;- babynames %&gt;%\n  dplyr::mutate(\n    year = as_factor(year),\n    sex = as_factor(sex),\n    name = as_factor(name),\n    n = as_factor(n),\n    prop = as_factor(prop)\n  )\nglimpse(babynames_modified)\n\nRows: 1,924,665\nColumns: 5\n$ year &lt;fct&gt; 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880,…\n$ sex  &lt;fct&gt; F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F,…\n$ name &lt;fct&gt; Mary, Anna, Emma, Elizabeth, Minnie, Margaret, Ida, Alice, Bertha…\n$ n    &lt;fct&gt; 7065, 2604, 2003, 1939, 1746, 1578, 1472, 1414, 1320, 1288, 1258,…\n$ prop &lt;fct&gt; 0.07238359, 0.02667896, 0.02052149, 0.01986579, 0.01788843, 0.016…\n\n\n\n\nDisplay babynames_modified\n\nbabynames_modified\n\n# A tibble: 1,924,665 × 5\n   year  sex   name      n     prop      \n   &lt;fct&gt; &lt;fct&gt; &lt;fct&gt;     &lt;fct&gt; &lt;fct&gt;     \n 1 1880  F     Mary      7065  0.07238359\n 2 1880  F     Anna      2604  0.02667896\n 3 1880  F     Emma      2003  0.02052149\n 4 1880  F     Elizabeth 1939  0.01986579\n 5 1880  F     Minnie    1746  0.01788843\n 6 1880  F     Margaret  1578  0.0161672 \n 7 1880  F     Ida       1472  0.01508119\n 8 1880  F     Alice     1414  0.01448696\n 9 1880  F     Bertha    1320  0.0135239 \n10 1880  F     Sarah     1288  0.01319605\n# ℹ 1,924,655 more rows"
  },
  {
    "objectID": "posts/Day2/index.html#group-by-in-mpg",
    "href": "posts/Day2/index.html#group-by-in-mpg",
    "title": "Day2: Examining, Modifying and Grouping Datasets",
    "section": "Group by in mpg",
    "text": "Group by in mpg\n\nmpg_modified %&gt;% filter(manufacturer == \"audi\") %&gt;% \n  group_by(manufacturer, class, year) %&gt;%\n  summarize(average_cty = mean(cty), average_hwy=mean(hwy) )\n\n`summarise()` has grouped output by 'manufacturer', 'class'. You can override\nusing the `.groups` argument.\n\n\n# A tibble: 4 × 5\n# Groups:   manufacturer, class [2]\n  manufacturer class    year average_cty average_hwy\n  &lt;chr&gt;        &lt;fct&gt;   &lt;int&gt;       &lt;dbl&gt;       &lt;dbl&gt;\n1 audi         compact  1999        17.4        26.4\n2 audi         compact  2008        18.6        27.6\n3 audi         midsize  1999        15          24  \n4 audi         midsize  2008        16.5        24"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/Day1/index.html",
    "href": "posts/Day1/index.html",
    "title": "My Name is Immortal",
    "section": "",
    "text": "thiojd sjnhsk gh fgkjhnsdkg sjlkgjsk r"
  },
  {
    "objectID": "posts/Day1/index.html#introduction",
    "href": "posts/Day1/index.html#introduction",
    "title": "My Name is Immortal",
    "section": "",
    "text": "thiojd sjnhsk gh fgkjhnsdkg sjlkgjsk r"
  },
  {
    "objectID": "posts/Day1/index.html#my-first-piece",
    "href": "posts/Day1/index.html#my-first-piece",
    "title": "My Name is Immortal",
    "section": "My First Piece",
    "text": "My First Piece\nbjughvghvjhvjvh vugvgvghvu vvuygy\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggformula)\n\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n    learnr::run_tutorial(\"introduction\", package = \"ggformula\")\n    learnr::run_tutorial(\"refining\", package = \"ggformula\")\n\nlibrary(babynames)\n\n\nbabynames\n\n# A tibble: 1,924,665 × 5\n    year sex   name          n   prop\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;     &lt;int&gt;  &lt;dbl&gt;\n 1  1880 F     Mary       7065 0.0724\n 2  1880 F     Anna       2604 0.0267\n 3  1880 F     Emma       2003 0.0205\n 4  1880 F     Elizabeth  1939 0.0199\n 5  1880 F     Minnie     1746 0.0179\n 6  1880 F     Margaret   1578 0.0162\n 7  1880 F     Ida        1472 0.0151\n 8  1880 F     Alice      1414 0.0145\n 9  1880 F     Bertha     1320 0.0135\n10  1880 F     Sarah      1288 0.0132\n# ℹ 1,924,655 more rows\n\n\n\nbabynames %&gt;% filter(name == \"Hardik\")\n\n# A tibble: 5 × 5\n   year sex   name       n       prop\n  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;int&gt;      &lt;dbl&gt;\n1  1990 M     Hardik     6 0.00000279\n2  1993 M     Hardik     7 0.00000339\n3  2001 M     Hardik     6 0.0000029 \n4  2009 M     Hardik     5 0.00000236\n5  2015 M     Hardik     5 0.00000245\n\n\n\nbabynames %&gt;% filter(name == \"Aditi\") %&gt;% \n  gf_line(n ~ year)\n\n\n\n\n\n\n\n\n\nbabynames %&gt;% filter(name==\"Adithi\") %&gt;% \n  gf_line(n ~ year)\n\n\n\n\n\n\n\n\n\nbabynames %&gt;% filter(name==\"Adhithi\") %&gt;% \n  gf_line(n ~ year)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Posts",
    "section": "",
    "text": "Day3: Counts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDay2: Examining, Modifying and Grouping Datasets\n\n\n\n\n\n\n\n\n\n\n\nHardik Monga\n\n\n\n\n\n\n\n\n\n\n\n\nDay 1: Line Graphs\n\n\n\n\n\n\n\n\n\n\n\nHardik Monga\n\n\n\n\n\n\n\n\n\n\n\n\nDay2: Math Anxiety\n\n\n\n\n\n\n\n\n\n\n\nHardik Monga\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nSep 26, 2024\n\n\nHarlow Malloc\n\n\n\n\n\n\nNo matching items"
  }
]